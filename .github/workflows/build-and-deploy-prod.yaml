# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Prod - Build and Deploy
on:
  push:
    branches:
      - release/*

# Required to apply the release tag number to the commit
permissions:
  contents: write

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Determine Semantic Version
        id: version
        uses: paulhatch/semantic-version@v5.3.0
      - name: Tag Commit with Version
        id: tag
        run: |
          branchName="${{ github.ref }}"
          initialReleaseVersion=v${branchName#refs/heads/release/v}.0
          if [ $(git tag -l "$initialReleaseVersion") ]; then
              echo "Tagging commit with version ${{ steps.version.outputs.version_tag }}"
              tagVersion=${{ steps.version.outputs.version_tag }}    
          else
              echo "First commit on release branch $branchName. Tagging commit with version $initialReleaseVersion"
              tagVersion=$initialReleaseVersion
          fi
          git config --global user.email "pipeline@trapa_app.com"
          git config --global user.name "${{ github.actor }}"
          git tag -a $tagVersion -m "Version $tagVersion" ${{ github.sha }}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin $tagVersion
          echo "version=${tagVersion#v}" >> "$GITHUB_OUTPUT"
          
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: 'stable'
      - run: flutter doctor -v
      - run: flutter test --coverage
      - shell: bash
        name: Load secrets files
        env:
          PROD_SECRETS: ${{ secrets.APP_SECRETS_PROD }}
        run: |
          echo "$PROD_SECRETS" >> settings/app_secrets_prod.json
      - run: flutter build web --release --dart-define-from-file=settings/app_settings_prod.json --dart-define-from-file=settings/app_secrets_prod.json --build-name=${{ steps.tag.outputs.version }} --build-number=${{ github.run_number }}
        name: Build PROD
      - uses: actions/upload-artifact@v3
        with:
          name: web-prod
          path: build/web

  deploy_prod:
    runs-on: ubuntu-latest
    needs: test_and_build
    steps:
    - uses: 'actions/checkout@v3'
    - name: 'Download Dev Artifact'
      uses: actions/download-artifact@v3
      with:
        name: web-prod
        path: build/web
    - uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TRAPA_PROD }}'
        channelId: live
        projectId: trapa-prod

